# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app import util


class MachineLearningJob(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, placement: MachineLearningJobPlacement=None, reference: MachineLearningJobReference=None, pyspark_job: MachineLearningJobPysparkJob=None):  # noqa: E501
        """MachineLearningJob - a model defined in Swagger

        :param placement: The placement of this MachineLearningJob.  # noqa: E501
        :type placement: MachineLearningJobPlacement
        :param reference: The reference of this MachineLearningJob.  # noqa: E501
        :type reference: MachineLearningJobReference
        :param pyspark_job: The pyspark_job of this MachineLearningJob.  # noqa: E501
        :type pyspark_job: MachineLearningJobPysparkJob
        """
        self.swagger_types = {
            'placement': MachineLearningJobPlacement,
            'reference': MachineLearningJobReference,
            'pyspark_job': MachineLearningJobPysparkJob
        }

        self.attribute_map = {
            'placement': 'placement',
            'reference': 'reference',
            'pyspark_job': 'pysparkJob'
        }

        self._placement = placement
        self._reference = reference
        self._pyspark_job = pyspark_job

    @classmethod
    def from_dict(cls, dikt) -> 'MachineLearningJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MachineLearning_job of this MachineLearningJob.  # noqa: E501
        :rtype: MachineLearningJob
        """
        return util.deserialize_model(dikt, cls)

    @property
    def placement(self) -> MachineLearningJobPlacement:
        """Gets the placement of this MachineLearningJob.


        :return: The placement of this MachineLearningJob.
        :rtype: MachineLearningJobPlacement
        """
        return self._placement

    @placement.setter
    def placement(self, placement: MachineLearningJobPlacement):
        """Sets the placement of this MachineLearningJob.


        :param placement: The placement of this MachineLearningJob.
        :type placement: MachineLearningJobPlacement
        """

        self._placement = placement

    @property
    def reference(self) -> MachineLearningJobReference:
        """Gets the reference of this MachineLearningJob.


        :return: The reference of this MachineLearningJob.
        :rtype: MachineLearningJobReference
        """
        return self._reference

    @reference.setter
    def reference(self, reference: MachineLearningJobReference):
        """Sets the reference of this MachineLearningJob.


        :param reference: The reference of this MachineLearningJob.
        :type reference: MachineLearningJobReference
        """

        self._reference = reference

    @property
    def pyspark_job(self) -> MachineLearningJobPysparkJob:
        """Gets the pyspark_job of this MachineLearningJob.


        :return: The pyspark_job of this MachineLearningJob.
        :rtype: MachineLearningJobPysparkJob
        """
        return self._pyspark_job

    @pyspark_job.setter
    def pyspark_job(self, pyspark_job: MachineLearningJobPysparkJob):
        """Sets the pyspark_job of this MachineLearningJob.


        :param pyspark_job: The pyspark_job of this MachineLearningJob.
        :type pyspark_job: MachineLearningJobPysparkJob
        """

        self._pyspark_job = pyspark_job
