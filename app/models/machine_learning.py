# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.models.base_model_ import Model
from app import util


class MachineLearning(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, project_id: str=None, job: MachineLearningJob=None):  # noqa: E501
        """MachineLearning - a model defined in Swagger

        :param project_id: The project_id of this MachineLearning.  # noqa: E501
        :type project_id: str
        :param job: The job of this MachineLearning.  # noqa: E501
        :type job: MachineLearningJob
        """
        self.swagger_types = {
            'project_id': str,
            'job': MachineLearningJob
        }

        self.attribute_map = {
            'project_id': 'projectId',
            'job': MachineLearningJob
        }

        self._project_id = project_id
        self._job = MachineLearningJob

    @classmethod
    def from_dict(cls, dikt) -> 'MachineLearning':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MachineLearning of this MachineLearning.  # noqa: E501
        :rtype: MachineLearning
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_id(self) -> str:
        """Gets the project_id of this MachineLearning.


        :return: The project_id of this MachineLearning.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id: str):
        """Sets the project_id of this MachineLearning.


        :param project_id: The project_id of this MachineLearning.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def job(self) -> MachineLearningJob:
        """Gets the job of this MachineLearning.


        :return: The job of this MachineLearning.
        :rtype: MachineLearningJob
        """
        return self._job

    @job.setter
    def job(self, job: MachineLearningJob):
        """Sets the job of this MachineLearning.


        :param job: The job of this MachineLearning.
        :type job: MachineLearningJob
        """

        self._job = job
